services:
  app:
    image: invoiceninja/invoiceninja-debian:latest
    restart: unless-stopped
    volumes:
      - ./.env:/var/www/html/.env
      - ./data/app_public:/var/www/html/public
      - ./data/app_storage:/var/www/html/storage
    env_file:
      - ./.env
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d:ro
      - ./data/app_public:/var/www/html/public:ro
      - ./data/app_storage:/var/www/html/storage:ro
    depends_on:
      - app

  mysql:
    image: mysql:8
    restart: unless-stopped
    volumes:
      - ./data/mysql_data:/var/lib/mysql
    env_file:
      - ./.env
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - ./data/redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
